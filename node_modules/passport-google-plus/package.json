{
  "_args": [
    [
      {
        "raw": "https://github.com/ngoctuan82/passport-google-plus.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/ngoctuan82/passport-google-plus.git",
        "spec": "git+https://github.com/ngoctuan82/passport-google-plus.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ngoctuan82/passport-google-plus.git",
          "sshUrl": "git+ssh://git@github.com/ngoctuan82/passport-google-plus.git",
          "httpsUrl": "git+https://github.com/ngoctuan82/passport-google-plus.git",
          "gitUrl": "git://github.com/ngoctuan82/passport-google-plus.git",
          "shortcut": "github:ngoctuan82/passport-google-plus",
          "directUrl": "https://raw.githubusercontent.com/ngoctuan82/passport-google-plus/master/package.json"
        }
      },
      "C:\\project\\Nadim\\zentomic-notifier-node"
    ]
  ],
  "_from": "git+https://github.com/ngoctuan82/passport-google-plus.git",
  "_id": "passport-google-plus@0.5.1",
  "_inCache": true,
  "_location": "/passport-google-plus",
  "_phantomChildren": {
    "passport-strategy": "1.0.0",
    "pause": "0.0.1"
  },
  "_requested": {
    "raw": "https://github.com/ngoctuan82/passport-google-plus.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/ngoctuan82/passport-google-plus.git",
    "spec": "git+https://github.com/ngoctuan82/passport-google-plus.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ngoctuan82/passport-google-plus.git",
      "sshUrl": "git+ssh://git@github.com/ngoctuan82/passport-google-plus.git",
      "httpsUrl": "git+https://github.com/ngoctuan82/passport-google-plus.git",
      "gitUrl": "git://github.com/ngoctuan82/passport-google-plus.git",
      "shortcut": "github:ngoctuan82/passport-google-plus",
      "directUrl": "https://raw.githubusercontent.com/ngoctuan82/passport-google-plus/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/ngoctuan82/passport-google-plus.git#cdd37f422c549ed1b857b83b17c0ea45ea91efd9",
  "_shasum": "264b7153038f6279c1835e8da3412f31f1e8896b",
  "_shrinkwrap": null,
  "_spec": "https://github.com/ngoctuan82/passport-google-plus.git",
  "_where": "C:\\project\\Nadim\\zentomic-notifier-node",
  "bugs": {
    "url": "https://github.com/sqrrrl/passport-google-plus/issues"
  },
  "contributors": [
    {
      "name": "Steve Bazyl",
      "email": "sbazyl@google.com"
    }
  ],
  "dependencies": {
    "async": "^0.9.x",
    "googleapis": "~1.0.0",
    "green-jwt": "^0.0.8-alpha",
    "passport": "^0.2.x",
    "request": "^2.2.x",
    "xtend": "^2.x"
  },
  "description": "Passport strategy for using G+ Sign-In",
  "devDependencies": {
    "mocha": "^2.0",
    "nock": "^0.50",
    "rewire": "^2.1",
    "should": "^4.3",
    "sinon": "^1.12"
  },
  "gitHead": "cdd37f422c549ed1b857b83b17c0ea45ea91efd9",
  "homepage": "https://github.com/sqrrrl/passport-google-plus#readme",
  "keywords": [
    "google",
    "g+",
    "passport"
  ],
  "license": "Apache 2",
  "main": "./lib/strategy",
  "name": "passport-google-plus",
  "optionalDependencies": {},
  "readme": "# Passport-Google-Plus\r\n\r\n[Passport](http://passportjs.org/) strategies for authenticating with the \r\n[Google+ Sign-In](https://developers.google.com/+/features/sign-in) button. \r\n\r\nThis module lets you authenticate using Google in your Node.js applications.\r\nBy plugging into Passport, Google+ Sign-In can be easily and\r\nunobtrusively integrated into any application or framework that supports\r\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\r\n[Express](http://expressjs.com/).\r\n\r\n## Install\r\n\r\n    $ npm install passport-google-plus\r\n\r\n## Usage for [Web Server-Side Flow](https://developers.google.com/+/web/signin/server-side-flow)\r\n\r\n### Important note\r\n\r\nIn the [Google Developers Console](https://console.developers.google.com/) make sure you have enabled the Google Plus API, otherwise your calls will fail (seen in [this issue](https://github.com/jaredhanson/passport-google-oauth/pull/45#issuecomment-52711960)).\r\n\r\n#### Configure Strategy\r\n\r\nThe strategy accepts a callback which is called after the user has been authenticated. The\r\nprofile and OAuth credentials can be saved or mapped to a user record.\r\n\r\n```js\r\nvar GooglePlusStrategy = require('passport-google-plus');\r\n\r\npassport.use(new GooglePlusStrategy({\r\n    clientId: 'YOUR_CLIENT_ID',\r\n    clientSecret: 'YOUR_CLIENT_SECRET'\r\n  },\r\n  function(tokens, profile, done) {\r\n    // Create or update user, call done() when complete...\r\n    done(null, profile, tokens);\r\n  }\r\n));\r\n```\r\n    \r\n#### Configure Google+ Sign-In Button\r\n\r\n```html\r\n<!-- Add where you want your sign-in button to render -->\r\n<div id=\"signinButton\">\r\n  <span class=\"g-signin\"\r\n    data-scope=\"https://www.googleapis.com/auth/plus.login\"\r\n    data-clientid=\"YOUR_CLIENT_ID\"\r\n    data-redirecturi=\"postmessage\"\r\n    data-accesstype=\"offline\"\r\n    data-cookiepolicy=\"single_host_origin\"\r\n    data-callback=\"signInCallback\">\r\n  </span>\r\n</div>\r\n<div id=\"result\"></div>\r\n```\r\n\r\n\r\n#### Handle the callback & forward the authorization code\r\n\r\n```js\r\nfunction signInCallback(authResult) {\r\n  if (authResult.code) {\r\n    $.post('/auth/google/callback', { code: authResult.code})\r\n    .done(function(data) {\r\n      $('#signinButton').hide();\r\n    }); \r\n  } else if (authResult.error) {\r\n    console.log('There was an error: ' + authResult.error);\r\n  }\r\n};\r\n```\r\n\r\n#### Authenticate Requests\r\n\r\nUse `passport.authenticate()`, specifying the `'google'` strategy, to\r\nauthenticate requests.\r\n\r\nFor example, as route middleware in an [Express](http://expressjs.com/)\r\napplication:\r\n\r\n```js\r\napp.post('/auth/google/callback', passport.authenticate('google'), function(req, res) {\r\n    // Return user back to client\r\n    res.send(req.user);\r\n});\r\n```\r\n\r\n## Usage for [Web Client-Side Flow](https://developers.google.com/+/web/signin/#using_the_client-side_flow)\r\n\r\nClient-side flows are also supported for web & mobile using ID tokens. When using ID tokens, profile \r\ndata is limited to public information.\r\n\r\n#### Configure Strategy\r\n\r\nThe strategy accepts a callback which is called after the user has been authenticated. The\r\nprofile and OAuth credentials can be saved or mapped to a user record.\r\n\r\n```js\r\nvar GooglePlusStrategy = require('passport-google-plus');\r\n\r\npassport.use(new GooglePlusStrategy({\r\n    clientId: 'YOUR_CLIENT_ID',\r\n    apiKey: 'YOUR_API_KEY'\r\n  },\r\n  function(tokens, profile, done) {\r\n    // Create or update user, call done() when complete...\r\n    done(null, profile, tokens);\r\n  }\r\n));\r\n```\r\n\r\n#### Configure Google+ Sign-In Button\r\n\r\n```html\r\n<!-- Add where you want your sign-in button to render -->\r\n<div id=\"signinButton\">\r\n  <span class=\"g-signin\"\r\n    data-scope=\"https://www.googleapis.com/auth/plus.login\"\r\n    data-clientid=\"YOUR_CLIENT_ID\"\r\n    data-redirecturi=\"postmessage\"\r\n    data-accesstype=\"online\"\r\n    data-cookiepolicy=\"single_host_origin\"\r\n    data-callback=\"signInCallback\">\r\n  </span>\r\n</div>\r\n<div id=\"result\"></div>\r\n```\r\n\r\n#### Handle the callback & forward the identity token\r\n\r\n```js\r\nfunction signInCallback(authResult) {\r\n  if (authResult.code) {\r\n    $.post('/auth/google/callback', { id_token: authResult.id_token})\r\n    .done(function(data) {\r\n      $('#signinButton').hide();\r\n    }); \r\n  } else if (authResult.error) {\r\n    console.log('There was an error: ' + authResult.error);\r\n  }\r\n};\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sqrrrl/passport-google-plus.git"
  },
  "scripts": {
    "test": "mocha tests/*"
  },
  "version": "0.5.1"
}
